- name: Get CPU architecture
  ansible.builtin.command: dpkg --print-architecture
  register: arch

- name: Copy kubeadm config
  become: true
  ansible.builtin.copy:
    src: ./files/kubeadm-config.yaml
    dest: /root/kubeadm-config.yaml

- name: Check if Kubernetes is initialized
  become: true
  ansible.builtin.command: kubeadm token list
  ignore_errors: true
  register: kubeadm_initialized

- name: Initialize Kubernetes cluster
  become: true
  ansible.builtin.shell:
    cmd: |
      kubeadm init --upload-certs --config /root/kubeadm-config.yaml > /root/kubeadm-init.log
  register: kube_init
  when: kubeadm_initialized.failed

- name: Debug kubeadm init
  become: true
  ansible.builtin.debug:
    var: kube_init.stdout
  when: kubeadm_initialized.failed

- name: Create .kube directory
  become: true
  ansible.builtin.file:
    path: /root/.kube
    state: directory
    owner: root
    group: root
    mode: "0600"

- name: Copy admin.conf
  become: true
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: true
    owner: root
    group: root

- name: Add Balto's Helm PGP public key
  become: true
  ansible.builtin.get_url:
    url: https://baltocdn.com/helm/signing.asc
    dest: /etc/apt/trusted.gpg.d/helm.asc
    mode: "0644"

- name: Add Helm apt repo
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ arch.stdout }} signed-by=/etc/apt/trusted.gpg.d/helm.asc] https://baltocdn.com/helm/stable/debian/ all main"
    state: present
    filename: helm

- name: Install Helm
  become: true
  ansible.builtin.apt:
    name: helm
    state: present
    update_cache: yes

- name: Allow pod scheduling on Control Plane
  become: true
  ansible.builtin.shell:
    cmd: |
      kubectl taint nodes --all node-role.kubernetes.io/control-plane- --context kubernetes-admin@kubernetes
  ignore_errors: true # fails if taint isn't there

- name: Copy cilium-install.sh
  become: true
  ansible.builtin.copy:
    src: ./files/cilium-install.sh
    dest: /tmp/cilium-install.sh
    mode: "0755"

- name: Copy cilium.yaml
  become: true
  ansible.builtin.copy:
    src: ./files/cilium.yaml
    dest: /tmp/cilium.yaml

- name: Install Cilium
  become: true
  ansible.builtin.shell: /tmp/cilium-install.sh
  register: cilium_install

- name: Debug Cilium install
  become: true
  ansible.builtin.debug:
    var: cilium_install.stdout
